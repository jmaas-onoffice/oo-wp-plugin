name: Development Build

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      ref:
        description: "The ref to check out. When not given, we use actions/chekcout@v2's default behavior."
        required: false
        default: ''
    outputs:
      stableVersion:  
        description: "The latest stable version number"
        value: ${{ jobs.get-versions.outputs.developmentVersion }}
      developmentVersion:
        description: "The version number identifying this development release"
        value: ${{ jobs.get-versions.outputs.developmentVersion }}

jobs:
  get-versions:
    name: Get versions
    runs-on: ubuntu-latest
    outputs:
      stableVersion: ${{ steps.get-stable-version.outputs.stableVersion }}
      developmentVersion: ${{ steps.get-development-version.outputs.developmentVersion }}
    steps:
      - name: Checkout from GIT
        uses: actions/checkout@v2
        with:
          # We need to fetch more than just the most recent commit,
          # since we later use `git describe`.
          fetch-depth: 0
          ref: ${{ inputs }}
          
      - name: Get latest stable plugin version (without leading 'v')
        id: get-stable-version
        # Remove the leading 'v' from the tag.
        run: echo "::set-output name=stableVersion::$(echo $( git describe --tags --abbrev=0 ) | sed -n 's/v\(\)/\1/p')"

      - name: Output development version
        id: get-development-version
        # Remove the leading 'v'.
        run: echo "::set-output name=devVersion::$(echo $( git describe --tags ) | sed -n 's/v\(\)/\1/p')"

  build:
    name: Build release
    runs-on: ubuntu-latest
    needs: get-version
    uses: ./.github/workflows/build-stable.yml
    with:
      expectedVersion: ${{ needs.get-versions.outputs.stableVersion }}
  
  dev-release:
    name: Development release
    runs-on: ubuntu-latest
    needs: [get-version, build]
    steps:
      - name: Download release
        uses: actions/download-artifact@v3
        with:
          name: release
          path: /tmp/release

      - name: Unzip release
        working-directory: /tmp/release
        run: |
          unzip release.zip
          rm release.zip

      - name: Patch version
        run: 'sed -i "s/Version: ${{ needs.get-versions.outputs.stableVersion }}/Version: ${{ needs.get-versions.outputs.developmentVersion }}/" /tmp/release/onoffice/plugin.php'

      - name: Zip release
        run: |
          cd /tmp/release/onoffice
          zip -r ../release.zip .

      - name: Upload release as artifact
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: /tmp/release/release.zip