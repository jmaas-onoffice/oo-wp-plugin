name: Development Release

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to WordPress SVN
    runs-on: ubuntu-latest
    env:
      SVN_URL: https://plugins.svn.wordpress.org/onoffice-for-wp-websites
    steps:
    - name: Checkout from GIT
      uses: actions/checkout@v2
      with:
        # We need to fetch more than just the most recent commit,
        # since we later use `git describe`.
        fetch-depth: 0
        submodules: recursive

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.0
        extensions: mbstring, mysqli, intl, curl

    - name: Install development dependencies
      run: composer install

    - name: Build release
      run: PREFIX=/tmp/release make release

    - name: Get stable plugin version (without leading 'v')
      run: echo "PLUGIN_VERSION_STABLE=$(echo $( git describe --abbrev=0 ) | sed -n 's/v\(\)/\1/p')" >> $GITHUB_ENV  

    - name: Get plugin development version (without leading 'v')
      run: echo "PLUGIN_VERSION=$(echo $( git describe --tags ) | sed -n 's/v\(\)/\1/p')" >> $GITHUB_ENV  

    - name: Patch version
      run: 

    - name: Make directory for updating SVN
      run: mkdir /tmp/svn

    - name: Checkout current trunk
      working-directory: /tmp/svn
      run: svn co ${{ env.SVN_URL }}/trunk .

    - name: Remove all files
      working-directory: /tmp/svn
      # Files that were removed should also be removed from SVN.
      # To be able to see which files need to be removed, we clean out everything except the '.svn/' folder.
      run: find . ! -path '.' ! -path './.svn*' -delete

    - name: Copy release files
      working-directory: /tmp/svn
      run: cp -r /tmp/release/onoffice/* .

    - name: Add all files to SVN
      working-directory: /tmp/svn
      run: svn add --force .

    - name: Inform SVN about removed files
      working-directory: /tmp/svn
      # SVN does not automatically detect which files were removed.
      # 'svn status' returns a list of changed files and "missing" files are marked with a '!' at the beginning of the line.
      # We apply 'svn rm --force <file path>' on each of those "missing" files so that SVN knows to remove them.
      # With 'awk' we extract each file name and transform it into the right command, and 'xargs' executes each such command.
      run: svn status | grep ^! | awk '{$1=""; print " --force \""substr($0,2)"@\"" }' | xargs -r svn rm

    - run: svn status
      working-directory: /tmp/svn